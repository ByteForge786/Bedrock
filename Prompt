Create a Python script to generate a clean and professional data lineage graph based on my dataframe results from SQL queries. Requirements:

Input: A pandas DataFrame containing columns that represent:
- Source objects/tables
- Target objects/tables
- Relationships/transformations between them

Required visualization features:
1. Directed graph showing clear data flow
2. Different node colors/styles for:
   - Source objects (light blue)
   - Intermediate datasets (orange/amber)
   - Processing rules/transformations (purple)
3. Labeled edges showing relationships
4. Professional layout with proper spacing
5. Legend or visual distinction between node types
6. Clear readable node labels

Technical requirements:
1. Use appropriate Python visualization libraries (suggest the best one for this use case)
2. Include all necessary imports
3. Create a reusable class/function that can accept different dataframes
4. Add comments explaining key parts of the code
5. Include example usage with sample data
6. The graph should be exportable/saveable

Sample input DataFrame structure for reference:
```python
data = {
    'source': ['Input_Table_1', 'Input_Table_2', 'Processed_Data'],
    'target': ['Processed_Data', 'Processed_Data', 'Final_Output'],
    'relationship': ['generates', 'populates', 'transforms']
}
df = pd.DataFrame(data)
